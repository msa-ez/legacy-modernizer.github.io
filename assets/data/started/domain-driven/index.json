{"hash":"098ac50e0ebda30bc2eb4be5e727f7ad16ac45b0","data":{"markdownPage":{"id":"4a38093d80a8b28fc80a5079bdf2561a","title":"수행 방법","description":"","path":"/started/domain-driven/","timeToRead":1,"content":"<h2 id=\"수행-방법\"><a href=\"#%EC%88%98%ED%96%89-%EB%B0%A9%EB%B2%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>수행 방법</h2>\n<p><strong>1. <a href=\"http://modernizer-app.uengine.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Legacy Modernizer</a> 에 접속합니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/01.png\">\n<br><br>\n<p><strong>2. <a href=\"https://console.anthropic.com/settings/keys\" target=\"_blank\" rel=\"noopener noreferrer\">Anthropic Console</a> 사이트를 통해 API 키를 발급받아서 입력합니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/02.png\">\n<br>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/03.png\">\n<br><br>\n<p><strong>3. PL/SQL 코드를 다운받아 압축을 풉니다. (<a href=\"https://www.uengine.org/images/sample_stored_procedure_file_new.zip\" target=\"_blank\" rel=\"noopener noreferrer\">샘플 스토어드 프로시져 파일</a>)</strong></p>\n<p><strong>4. PL/SQL 코드를 자바로 변환하기 위해, 다운받은 샘플 스토어드 프로시져 파일을 아래와 같이 드래그 &#x26; 드롭하여 업로드합니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/04.png\">\n<br>\n<ul>\n<li>\n<p>분석 대상은 <strong>스토어드 프로시저(SP)</strong> 파일이며, 다음과 같은 파일들을 함께 업로드하는 것이 필요합니다.</p>\n<ul>\n<li><strong>SP_프로시저명</strong>: 주요 분석 대상</li>\n<li><strong>DDL_테이블명</strong>: 테이블 정의</li>\n<li><strong>SEQ_시퀀스명</strong>: 시퀀스 정의</li>\n</ul>\n</li>\n<li>⚠️ <strong>파일명 규칙은 필수</strong>입니다. (<code>SP_</code>, <code>DDL_</code>, <code>SEQ_</code> 형식)</li>\n<li>특히 <strong>DDL 파일은 정확도 향상에 매우 중요</strong>하며, 업로드 여부에 따라 분석 품질에 큰 차이가 발생할 수 있습니다.\n<br><br></li>\n</ul>\n<p><strong>5. 해당 파일을 분석해서 그래프 형태로 시각화 합니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/05.png\">\n<br>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/06.png\">\n<br>\n<ul>\n<li>스토어드 프로시저 및 함수, 테이블의 흐름을 그래프 형태로 시각화되어 확인할 수 있습니다.\n<br><br></li>\n</ul>\n<p><strong>6. 그래프 시각화에서 각 노드를 클릭하면 해당 노드에 관련된 정보를 확인할 수 있고, 노드를 더블 클릭하면 각각 해당되는 구성을 하나씩 펼쳐서 볼 수 있습니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/07.png\">\n<br>\n<ul>\n<li>\n<p>업로드된 스토어드 프로시저는 다음과 같은 구조로 자동 분석됩니다.\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/07-1.png\" style=\"margin-top: 10px;\"></p>\n<ul>\n<li><code>SPEC</code> 노드: 함수의 <strong>입력 매개변수</strong></li>\n<li><code>DECLARE</code> 노드: <strong>지역 변수</strong></li>\n<li><code>TRY-EXCEPTION</code> 노드: <strong>예외 처리 흐름</strong></li>\n<li>기타 노드들: <strong>비즈니스 로직 흐름</strong></li>\n<li>각 노드에는 <strong>summary 정보</strong>가 포함되어 있어, 역할 및 기능을 쉽게 파악할 수 있습니다.\n<br><br></li>\n</ul>\n</li>\n</ul>\n<p><strong>7. 클릭 시, 같은 테이블 또는 함수 노드들이 '하이라이트'되어 한눈에 연관성을 파악할 수 있습니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/08.png\">\n<br>\n<ul>\n<li>이를 통해 <strong>어떤 프로시저가 어떤 테이블이나 함수를 호출하고 있는지 시각적으로 추적</strong>이 가능합니다.\n<br><br></li>\n</ul>\n<p><strong>8. 각 노드에 관한 상세정보창은 접었다 펼쳤다 할 수 있으며, 마우스 스크롤을 통해 확대/축소하여 전체적인 흐름을 볼 수 있습니다.</strong>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/09.png\">\n<br></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/10.png\">\n<br><br>\n<p><strong>9. '데이터 삭제' 버튼을 누르면 저장된 그래프 데이터를 삭제하고 다시 분석이 가능합니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/11.png\">\n<br>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/12.png\">\n<br>\n<ul>\n<li>같은 내용의 그래프 트리가 존재하면 분석을 하지않고 그대로 반환하기 때문에, <strong>분석중 그만두었거나 새로고침으로 인해 끊겼다면 삭제하고 다시 진행해주세요.</strong>\n<br><br></li>\n</ul>\n<p><strong>10. CONVERT TARGET PROJECT 버튼을 누르면 변환이 시작되며, 그래프 정보를 단계별로 사용하여 필요한 자바 클래스 파일을 생성합니다.</strong></p>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/13.png\">\n<br>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/legacy-modernizer/14.png\">\n<br>\n<img src=\"https://ju0735.github.io/uengine-new.github.io/images/demo-corporate/use-04.jpg\">\n<br>\n<ul>\n<li>변환 결과는 <strong>ZIP 파일 형태로 다운로드</strong> 받을 수 있으며, <strong>IDE 편집기(예: IntelliJ, Eclipse 등)</strong>에서 쉽게 열어볼 수 있습니다.</li>\n<li>\n<p>Java 프로젝트 구조는 다음과 같이 구성됩니다.</p>\n<ul>\n<li><code>Command</code>, <code>Controller</code>, <code>Entity</code>, <code>Repository</code>, <code>Service</code></li>\n<li>각 클래스는 실제 프로시저의 비즈니스 로직을 반영한 메서드들로 구성됩니다.</li>\n</ul>\n</li>\n</ul>\n","sidebar":"started","headings":[{"depth":2,"value":"수행 방법","anchor":"#수행-방법"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/started/","title":"Legacy Modernizer"}},{"node":{"path":"/started/domain-driven/","title":"수행 방법"}}]}},"context":{}}